# generated by datamodel-codegen:
#   filename:  laboratory.json
#   timestamp: 2022-07-25T08:39:07+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field


class NetItem(BaseModel):
    class Config:
        extra = Extra.forbid

    interface: int
    domain: str


class File(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    location: Optional[str] = None
    content: str


class Files(BaseModel):
    __root__: List[File] = Field(..., title='files')


class TopoItem(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    image: Optional[str] = None
    mem: Optional[str] = None
    cpus: Optional[float] = None
    port: Optional[List[str]] = None
    ipv6: Optional[bool] = None
    exec: Optional[List[str]] = None
    sysctl: Optional[List[str]] = None
    env: Optional[List[str]] = None
    shell: Optional[str] = None
    num_terms: Optional[int] = None
    net: List[NetItem]
    bridged: Optional[bool] = None
    files: Optional[Files] = None


class Shared(BaseModel):
    class Config:
        extra = Extra.forbid

    files: Files


class Laboratory(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    description: Optional[str] = None
    version: Optional[str] = None
    author: Optional[str] = None
    email: Optional[str] = None
    web: Optional[str] = None
    topo: List[TopoItem]
    shared: Optional[Shared] = None
